#message("include ${QT_USE_FILE}")
include ( ${QT_USE_FILE} )

set( INSTALL_QT_USE_FILE ${CMAKE_CURRENT_LIST_FILE})

if(WIN32)
#  if(QT_USE_QTNETWORK OR QT_USE_QT3SUPPORT)
#    set( QT_LIBRARIES ${QT_LIBRARIES} dnsapi Ws2_32)
#  endif()
endif()
#message("QT Libraries ${QT_LIBRARIES}"
#-DUNICODE
#-DQT_LARGEFILE_SUPPORT
#-DQT_THREAD_SUPPORT
#-DQT_4_VERSION
#-D_CRT_SECURE_NO_DEPRECATE
#-DQT_THREAD_SUPPORT
#-DQT_DLL
#-DQT_GUI_LIB
#-DQT_CORE_LIB
#-DQT_HAVE_MMX
#-DQT_HAVE_3DNOW
#-DQT_HAVE_SSE
#-DQT_HAVE_MMXEXT
#-DQT_HAVE_SSE2
if(NOT UNIX)
 if(NOT ${CMAKE_CXX_COMPILER_ID} STREQUAL "MSVC")
  add_definitions(-DQT_LARGEFILE_SUPPORT)
 endif()
endif()
add_definitions(-DQT_THREAD_SUPPORT)
add_definitions(-DQT_4_VERSION)
add_definitions(-DQT_DLL)
#add_definitions()
if(NOT CMAKE_BUILD_TYPE MATCHES Release OR CMAKE_BUILD_TYPE MATCHES RelWithDebInfo)
  if(WIN32)
    set(QT_DLL_DEBUG "d")
  endif()
endif()

unset(QT_QTCORE_SHARED_LIBRARY CACHE)
unset(QT_QTGUI_SHARED_LIBRARY CACHE)
unset(QT_QT3SUPPORT_SHARED_LIBRARY CACHE)
unset(QT_QTNETWORK_SHARED_LIBRARY CACHE)
unset(QT_QTXML_SHARED_LIBRARY CACHE)
unset(QT_QTSQL_SHARED_LIBRARY CACHE)
unset(QT_QTXMLPATTERNS_SHARED_LIBRARY CACHE)
unset(QT_QTSQL_SHARED_LIBRARY CACHE)
unset(QT_QTDBUS_SHARED_LIBRARY CACHE)
unset(QT_QTOPENGL_SHARED_LIBRARY CACHE)
unset(QT_QTTEST_SHARED_LIBRARY CACHE)

# store current values for later restor
#set (CMAKE_OLD_FIND_LIBRARY_SUFFIXES ${CMAKE_FIND_LIBRARY_SUFFIXES})
#set (CMAKE_OLD_FIND_LIBRARY_PREFIXES ${CMAKE_FIND_LIBRARY_PREFIXES})
if(WIN32)
  set(BUILD_FIND_SHARED_LIBRARY_PREFIXES )
  set(BUILD_FIND_SHARED_LIBRARY_SUFFIXES "4.dll")
else()
  set(BUILD_FIND_SHARED_LIBRARY_PREFIXES "lib")
  set(BUILD_FIND_SHARED_LIBRARY_SUFFIXES ".so.4")
endif()

find_program( QT_QHELPGENERATOR_EXECUTABLE
              NAMES qhelpgenerator
              PATHS ${QT_BINARY_DIR} ${QT_LIBRARY_DIR}
              NO_DEFAULT_PATH
)

if( NOT QT_QHELPGENERATOR_EXECUTABLE )
#  message( WARNING "qhelpgenerator executable not found, required for qthelp builds" )
endif()

find_file( QT_QTCORE_SHARED_LIBRARY
  NAMES ${BUILD_FIND_SHARED_LIBRARY_PREFIXES}QtCore${QT_LIBINFIX}${QT_DLL_DEBUG}${BUILD_FIND_SHARED_LIBRARY_SUFFIXES}
  PATHS ${QT_BINARY_DIR} ${QT_LIBRARY_DIR}
  NO_DEFAULT_PATH
)
find_file( QT_QTGUI_SHARED_LIBRARY
  NAMES ${BUILD_FIND_SHARED_LIBRARY_PREFIXES}QtGui${QT_LIBINFIX}${QT_DLL_DEBUG}${BUILD_FIND_SHARED_LIBRARY_SUFFIXES}
  PATHS ${QT_BINARY_DIR} ${QT_LIBRARY_DIR}
  NO_DEFAULT_PATH
)
find_file( QT_QT3SUPPORT_SHARED_LIBRARY
  NAMES ${BUILD_FIND_SHARED_LIBRARY_PREFIXES}Qt3Support${QT_LIBINFIX}${QT_DLL_DEBUG}${BUILD_FIND_SHARED_LIBRARY_SUFFIXES}
  PATHS ${QT_BINARY_DIR} ${QT_LIBRARY_DIR}
  NO_DEFAULT_PATH
)
find_file( QT_QTNETWORK_SHARED_LIBRARY
  NAMES ${BUILD_FIND_SHARED_LIBRARY_PREFIXES}QtNetwork${QT_LIBINFIX}${QT_DLL_DEBUG}${BUILD_FIND_SHARED_LIBRARY_SUFFIXES}
  PATHS ${QT_BINARY_DIR} ${QT_LIBRARY_DIR}
  NO_DEFAULT_PATH
)
find_file( QT_QTXML_SHARED_LIBRARY
  NAMES ${BUILD_FIND_SHARED_LIBRARY_PREFIXES}QtXml${QT_LIBINFIX}${QT_DLL_DEBUG}${BUILD_FIND_SHARED_LIBRARY_SUFFIXES}
  PATHS ${QT_BINARY_DIR} ${QT_LIBRARY_DIR}
  NO_DEFAULT_PATH
)
find_file( QT_QTOPENGL_SHARED_LIBRARY
  NAMES ${BUILD_FIND_SHARED_LIBRARY_PREFIXES}QtOpenGl${QT_LIBINFIX}${QT_DLL_DEBUG}${BUILD_FIND_SHARED_LIBRARY_SUFFIXES}
  PATHS ${QT_BINARY_DIR} ${QT_LIBRARY_DIR}
  NO_DEFAULT_PATH
)
find_file( QT_QTSQL_SHARED_LIBRARY
  NAMES ${BUILD_FIND_SHARED_LIBRARY_PREFIXES}QtSql${QT_LIBINFIX}${QT_DLL_DEBUG}${BUILD_FIND_SHARED_LIBRARY_SUFFIXES}
  PATHS ${QT_BINARY_DIR} ${QT_LIBRARY_DIR}
  NO_DEFAULT_PATH
)
find_file( QT_QTXMLPATTERNS_SHARED_LIBRARY
  NAMES ${BUILD_FIND_SHARED_LIBRARY_PREFIXES}QtXmlPatterns${QT_LIBINFIX}${QT_DLL_DEBUG}${BUILD_FIND_SHARED_LIBRARY_SUFFIXES}
  PATHS ${QT_BINARY_DIR} ${QT_LIBRARY_DIR}
  NO_DEFAULT_PATH
)

find_file( QT_QTDBUS_SHARED_LIBRARY
  NAMES ${BUILD_FIND_SHARED_LIBRARY_PREFIXES}QtDBus${QT_LIBINFIX}${QT_DLL_DEBUG}${BUILD_FIND_SHARED_LIBRARY_SUFFIXES}
  PATHS ${QT_BINARY_DIR} ${QT_LIBRARY_DIR}
  NO_DEFAULT_PATH
)

find_file( QT_QTTEST_SHARED_LIBRARY
  NAMES ${BUILD_FIND_SHARED_LIBRARY_PREFIXES}QtTest${QT_LIBINFIX}${QT_DLL_DEBUG}${BUILD_FIND_SHARED_LIBRARY_SUFFIXES}
  PATHS ${QT_BINARY_DIR} ${QT_LIBRARY_DIR}
  NO_DEFAULT_PATH
)

if(CMAKE_BUILD_TYPE MATCHES Release OR CMAKE_BUILD_TYPE MATCHES RelWithDebInfo)
  set( BUILD_TYPE RELEASE )
else()
  set( BUILD_TYPE_DEBUG )
endif()

set(QT_INSTALL_FILES)
set(QT_LINK_LIBRARIES)
if(QT_USE_QTCORE)
  list( APPEND QT_INSTALL_FILES ${QT_QTCORE_SHARED_LIBRARY})
  list( APPEND QT_LINK_LIBRARIES ${QT_QTCORE_LIBRARY_${BUILD_TYPE}} )
endif()
if(QT_USE_QTGUI )
  list( APPEND QT_INSTALL_FILES ${QT_QTGUI_SHARED_LIBRARY})
  list( APPEND QT_LINK_LIBRARIES ${QT_QTGUI_LIBRARY_${BUILD_TYPE}} )
endif()
if(QT_USE_QT3SUPPORT)
  list( APPEND QT_INSTALL_FILES ${QT_QT3SUPPORT_SHARED_LIBRARY}
      ${QT_QTCORE_SHARED_LIBRARY}
      ${QT_QTGUI_SHARED_LIBRARY}
      ${QT_QTXML_SHARED_LIBRARY}
      ${QT_QTNETWORK_SHARED_LIBRARY}
      ${QT_QTSQL_SHARED_LIBRARY}
  )
  list( APPEND QT_LINK_LIBRARIES ${QT_QT3SUPPORT_LIBRARY_${BUILD_TYPE}} )
  list( APPEND QT_LINK_LIBRARIES ${QT_QTCORE_LIBRARY_${BUILD_TYPE}} )
  list( APPEND QT_LINK_LIBRARIES ${QT_QTGUI_LIBRARY_${BUILD_TYPE}} )
  list( APPEND QT_LINK_LIBRARIES ${QT_QTXML_LIBRARY_${BUILD_TYPE}} )
  list( APPEND QT_LINK_LIBRARIES ${QT_QTSQL_LIBRARY_${BUILD_TYPE}} )
  list( APPEND QT_LINK_LIBRARIES ${QT_QTNETWORK_LIBRARY_${BUILD_TYPE}} )
endif()
if(QT_USE_QTXML)
  list( APPEND QT_INSTALL_FILES ${QT_QTXML_SHARED_LIBRARY})
  list( APPEND QT_LINK_LIBRARIES ${QT_QTXML_LIBRARY_${BUILD_TYPE}} )
endif()
if(QT_USE_QTOPENGL)
  list( APPEND QT_INSTALL_FILES ${QT_QTOPENGL_SHARED_LIBRARY})
  list( APPEND QT_LINK_LIBRARIES ${QT_QTOPENGL_LIBRARY_${BUILD_TYPE}} )
endif()
if(QT_USE_QTNETWORK)
  list( APPEND QT_INSTALL_FILES ${QT_QTNETWORK_SHARED_LIBRARY})
  list( APPEND QT_LINK_LIBRARIES ${QT_QTNETWORK_LIBRARY_${BUILD_TYPE}} )
endif()
if(QT_USE_QTSQL)
  list( APPEND QT_INSTALL_FILES ${QT_QTSQL_SHARED_LIBRARY})
  list( APPEND QT_LINK_LIBRARIES ${QT_QTLINK_LIBRARY_${BUILD_TYPE}} )
endif()
if(QT_USE_QTXMLPATTERNS)
  list( APPEND QT_INSTALL_FILES ${QT_QTXMLPATTERNS_SHARED_LIBRARY})
  list( APPEND QT_LINK_LIBRARIES ${QT_QTXMLPATTERNS_LIBRARY_${BUILD_TYPE}} )
endif()
if(QT_USE_QTDBUS)
  list( APPEND QT_INSTALL_FILES ${QT_QTDBUS_SHARED_LIBRARY})
  list( APPEND QT_LINK_LIBRARIES ${QT_QTDBUS_LIBRARY_${BUILD_TYPE}} )
endif()
if(QT_USE_QTTEST)
  list( APPEND QT_INSTALL_FILES ${QT_QTTEST_SHARED_LIBRARY})
  list( APPEND QT_LINK_LIBRARIES ${QT_QTTEST_LIBRARY_${BUILD_TYPE}} )
endif()

list( REMOVE_DUPLICATES QT_INSTALL_FILES )

if( UNIX )
  set( QT_INSTALL_FILES_RESOLVED )
  foreach( _file ${QT_INSTALL_FILES})
    get_filename_component( _resolvedFile "${_file}" REALPATH)
    list( APPEND QT_INSTALL_FILES "${_resolvedFile}" )
  endforeach()
endif()
